{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/context/auth.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { AXIOS, doAxiosRequestIntercept } from \"src/services/api/config\";\nimport { logout } from \"src/services/api/identity\";\nvar AuthContext = /*#__PURE__*/createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState({\n    id: \"\",\n    avatar: \"\"\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  doAxiosRequestIntercept();\n  useEffect(function () {\n    var id = localStorage.getItem(\"id\") || \"\";\n    var avatar = localStorage.getItem(\"avatar\") || \"\";\n    setUser({\n      id: id,\n      avatar: avatar\n    });\n    console.log(\"%c user.id\", \"color: blue;\", user.id);\n  }, []);\n\n  var login = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var code, res, _user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              code = _ref2.code;\n              _context.prev = 1;\n              _context.next = 4;\n              return AXIOS.post(\"users/login\", {\n                code: code,\n                redirect_uri: \"/requests\"\n              });\n\n            case 4:\n              res = _context.sent;\n              // console.log(\"res\", res);, res);\n              localStorage.setItem(\"token\", res.data.token);\n              localStorage.setItem(\"avatar\", res.data.avatar);\n              localStorage.setItem(\"id\", res.data.name);\n              _user = res.data;\n              setUser({\n                id: _user.name,\n                avatar: _user.avatar\n              });\n              return _context.abrupt(\"return\", _user);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"error2221\", _context.t0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function login(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user: user,\n      login: login,\n      logout: logout,\n      loading: loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n}; // export const ProtectRoute = ({ children }:any) => {\n//   const { isAuthenticated, loading } = useAuth();\n//   const router = useRouter();\n//   if (loading) {\n//     return (\n//       <div className=\"loading\">\n//         <CircularProgress style={{ width: \"10%\" }} color=\"secondary\" />\n//       </div>\n//     );\n//   }\n//   if (!isAuthenticated) return <Redirect to=\"/login\" />;\n//   //if (isAuthenticated) return <Redirect to={router.asPath} />;\n//   return children;\n// };\n\n_s(AuthProvider, \"9Vq+9MXtJthPs+oGpe+0JO5uP68=\");\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/context/auth.tsx"],"names":["React","createContext","useContext","useEffect","useState","AXIOS","doAxiosRequestIntercept","logout","AuthContext","AuthProvider","children","id","avatar","user","setUser","loading","setLoading","localStorage","getItem","console","log","login","code","post","redirect_uri","res","setItem","data","token","name","isAuthenticated","useAuth"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AAEA,SAASC,KAAT,EAAgBC,uBAAhB,QAA+C,yBAA/C;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAGA,IAAMC,WAAgB,gBAAGP,aAAa,CAAC,EAAD,CAAtC;AAEA,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,OAAqC;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;;AAAA,kBACvCN,QAAQ,CAAM;AACpCO,IAAAA,EAAE,EAAE,EADgC;AAEpCC,IAAAA,MAAM,EAAE;AAF4B,GAAN,CAD+B;AAAA,MACxDC,IADwD;AAAA,MAClDC,OADkD;;AAAA,mBAKjCV,QAAQ,CAAC,IAAD,CALyB;AAAA,MAKxDW,OALwD;AAAA,MAK/CC,UAL+C;;AAM/DV,EAAAA,uBAAuB;AAEvBH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,EAAE,GAAGM,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B,EAAzC;AACA,QAAMN,MAAM,GAAGK,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EAAjD;AACAJ,IAAAA,OAAO,CAAC;AAAEH,MAAAA,EAAE,EAAFA,EAAF;AAAMC,MAAAA,MAAM,EAANA;AAAN,KAAD,CAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,cAA1B,EAA0CP,IAAI,CAACF,EAA/C;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMU,KAAK;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,IAAT,SAASA,IAAT;AAAA;AAAA;AAAA,qBAEajB,KAAK,CAACkB,IAAN,CAAW,aAAX,EAA0B;AAC/CD,gBAAAA,IAAI,EAAEA,IADyC;AAE/CE,gBAAAA,YAAY,EAAE;AAFiC,eAA1B,CAFb;;AAAA;AAEJC,cAAAA,GAFI;AAMV;AACAR,cAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,GAAG,CAACE,IAAJ,CAASC,KAAvC;AACAX,cAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BD,GAAG,CAACE,IAAJ,CAASf,MAAxC;AACAK,cAAAA,YAAY,CAACS,OAAb,CAAqB,IAArB,EAA2BD,GAAG,CAACE,IAAJ,CAASE,IAApC;AACMhB,cAAAA,KAVI,GAUGY,GAAG,CAACE,IAVP;AAWVb,cAAAA,OAAO,CAAC;AAAEH,gBAAAA,EAAE,EAAEE,KAAI,CAACgB,IAAX;AAAiBjB,gBAAAA,MAAM,EAAEC,KAAI,CAACD;AAA9B,eAAD,CAAP;AAXU,+CAYHC,KAZG;;AAAA;AAAA;AAAA;AAcVM,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAdU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAALC,KAAK;AAAA;AAAA;AAAA,KAAX;;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,eAAe,EAAE,CAAC,CAACjB,IADd;AAELA,MAAAA,IAAI,EAAJA,IAFK;AAGLQ,MAAAA,KAAK,EAALA,KAHK;AAILd,MAAAA,MAAM,EAANA,MAJK;AAKLQ,MAAAA,OAAO,EAAPA;AALK,KADT;AAAA,cASGL;AATH;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CA/CM,C,CAiDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA9DaD,Y;;KAAAA,Y;AAgEb,OAAO,IAAMsB,OAAY,GAAG,SAAfA,OAAe;AAAA;;AAAA,SAAM7B,UAAU,CAACM,WAAD,CAAhB;AAAA,CAArB;;IAAMuB,O","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nimport { AXIOS, doAxiosRequestIntercept } from \"src/services/api/config\";\nimport { logout } from \"src/services/api/identity\";\nimport { User } from \"src/services/api/users\";\n\nconst AuthContext: any = createContext({});\n\nexport const AuthProvider = ({ children }: { children: any }) => {\n  const [user, setUser] = useState<any>({\n    id: \"\",\n    avatar: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  doAxiosRequestIntercept();\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\") || \"\";\n    const avatar = localStorage.getItem(\"avatar\") || \"\";\n    setUser({ id, avatar });\n    console.log(\"%c user.id\", \"color: blue;\", user.id);\n  }, []);\n\n  const login = async ({ code }: { code: string; redirect_uri: string }) => {\n    try {\n      const res: any = await AXIOS.post(\"users/login\", {\n        code: code,\n        redirect_uri: \"/requests\",\n      });\n      // console.log(\"res\", res);, res);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"avatar\", res.data.avatar);\n      localStorage.setItem(\"id\", res.data.name);\n      const user = res.data;\n      setUser({ id: user.name, avatar: user.avatar });\n      return user;\n    } catch (error) {\n      console.log(\"error2221\", error);\n      return error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        login,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// export const ProtectRoute = ({ children }:any) => {\n//   const { isAuthenticated, loading } = useAuth();\n//   const router = useRouter();\n//   if (loading) {\n//     return (\n//       <div className=\"loading\">\n//         <CircularProgress style={{ width: \"10%\" }} color=\"secondary\" />\n//       </div>\n//     );\n//   }\n//   if (!isAuthenticated) return <Redirect to=\"/login\" />;\n//   //if (isAuthenticated) return <Redirect to={router.asPath} />;\n//   return children;\n// };\n\nexport const useAuth: any = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}