{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/pages/login/index.tsx\";\nimport { notification, Space, Spin } from \"antd\";\nimport { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useAuth } from \"src/context/auth\";\n\nconst Login = props => {\n  const router = useRouter();\n  const {\n    login,\n    user\n  } = useAuth();\n  const {\n    0: loading,\n    1: setloading\n  } = useState(false);\n\n  const onSuccess = async response => {\n    console.log(response);\n\n    try {\n      setloading(true);\n      login({\n        code: response.code,\n        redirect_uri: \"\"\n      }).then(() => {\n        router.push(\"/repositories\");\n      });\n    } catch (error) {\n      console.log(\"%c error\", \"color: red;\", error);\n      notification[\"error\"]({\n        message: error.message || \"Login failed\"\n      });\n    }\n  };\n\n  const onFailure = response => {\n    console.log(response);\n  };\n\n  useEffect(() => {\n    if (user.id) {\n      router.push(\"/repositories\");\n    }\n  }, []);\n  return loading || user.id ? /*#__PURE__*/_jsxDEV(Space, {\n    size: \"large\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://account.stg.cdgfossil.com/assets/images/tenants/fossil/logo-large.png\",\n      alt: \"\",\n      className: \"logo\",\n      style: {\n        width: \"20%\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"1036342066171-e01mcpvsj98b5ghs31sabf9pl9gl7hhv.apps.googleusercontent.com\",\n      buttonText: \"Sign in with Google\",\n      onSuccess: onSuccess,\n      responseType: \"code\",\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/pages/login/index.tsx"],"names":["notification","Space","Spin","useRouter","React","useEffect","useState","GoogleLogin","useAuth","Login","props","router","login","user","loading","setloading","onSuccess","response","console","log","code","redirect_uri","then","push","error","message","onFailure","id","display","flexDirection","alignItems","justifyContent","width","height","marginBottom"],"mappings":"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","sourcesContent":["import { notification, Space, Spin } from \"antd\";\nimport { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\n\nimport { useAuth } from \"src/context/auth\";\n\ninterface Props {}\n\nconst Login = (props: Props) => {\n  const router = useRouter();\n  const { login, user } = useAuth();\n  const [loading, setloading] = useState<boolean>(false);\n  const onSuccess = async (response: any) => {\n    console.log(response);\n    try {\n      setloading(true);\n      login({ code: response.code, redirect_uri: \"\" }).then(() => {\n        router.push(\"/repositories\");\n      });\n    } catch (error) {\n      console.log(\"%c error\", \"color: red;\", error);\n      notification[\"error\"]({\n        message: error.message || \"Login failed\",\n      });\n    }\n  };\n  const onFailure = (response: any) => {\n    console.log(response);\n  };\n  useEffect(() => {\n    if (user.id) {\n      router.push(\"/repositories\");\n    }\n  }, []);\n  return loading || user.id ? (\n    <Space\n      size=\"large\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <Spin size=\"large\" />\n    </Space>\n  ) : (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <img\n        src=\"https://account.stg.cdgfossil.com/assets/images/tenants/fossil/logo-large.png\"\n        alt=\"\"\n        className=\"logo\"\n        style={{\n          width: \"20%\",\n          marginBottom: \"20px\",\n        }}\n      />\n      <GoogleLogin\n        clientId=\"1036342066171-e01mcpvsj98b5ghs31sabf9pl9gl7hhv.apps.googleusercontent.com\"\n        buttonText=\"Sign in with Google\"\n        onSuccess={onSuccess}\n        responseType=\"code\"\n        onFailure={onFailure}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}