{"ast":null,"code":"export var isAxiosError = function isAxiosError(error) {\n  return error.isAxiosError !== undefined;\n};\nexport var parseError = function parseError(error) {\n  if (isAxiosError(error) && error.response) {\n    var apiError = error.response.data;\n    return {\n      status: apiError.code,\n      message: apiError.message,\n      details: error.response,\n      name: error.name,\n      stack: error.stack\n    };\n  }\n\n  return {\n    status: 500,\n    message: \"Oops something went wrong.\",\n    details: error.message,\n    name: error.name,\n    stack: error.stack\n  };\n};","map":{"version":3,"sources":["/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/services/api/errors.ts"],"names":["isAxiosError","error","undefined","parseError","response","apiError","data","status","code","message","details","name","stack"],"mappings":"AAaA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAC1BC,KAD0B,EAEC;AAC3B,SAAQA,KAAD,CAAyBD,YAAzB,KAA0CE,SAAjD;AACD,CAJM;AAMP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACF,KAAD,EAA8C;AACtE,MAAID,YAAY,CAAmBC,KAAnB,CAAZ,IAAyCA,KAAK,CAACG,QAAnD,EAA6D;AAC3D,QAAIC,QAAQ,GAAGJ,KAAK,CAACG,QAAN,CAAeE,IAA9B;AACA,WAAO;AACLC,MAAAA,MAAM,EAAEF,QAAQ,CAACG,IADZ;AAELC,MAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAFb;AAGLC,MAAAA,OAAO,EAAET,KAAK,CAACG,QAHV;AAILO,MAAAA,IAAI,EAAEV,KAAK,CAACU,IAJP;AAKLC,MAAAA,KAAK,EAAEX,KAAK,CAACW;AALR,KAAP;AAOD;;AAED,SAAO;AACLL,IAAAA,MAAM,EAAE,GADH;AAELE,IAAAA,OAAO,EAAE,4BAFJ;AAGLC,IAAAA,OAAO,EAAET,KAAK,CAACQ,OAHV;AAILE,IAAAA,IAAI,EAAEV,KAAK,CAACU,IAJP;AAKLC,IAAAA,KAAK,EAAEX,KAAK,CAACW;AALR,GAAP;AAOD,CAnBM","sourcesContent":["import { AxiosError } from \"axios\";\n\nexport interface APIError extends Error {\n  status?: number;\n  details?: any;\n}\n\nexport interface APIResponseError {\n  code: number;\n  id?: string;\n  message: string;\n}\n\nexport const isAxiosError = <T>(\n  error: Error | AxiosError<T>\n): error is AxiosError<T> => {\n  return (error as AxiosError<T>).isAxiosError !== undefined;\n};\n\nexport const parseError = (error: Error | AxiosError<any>): APIError => {\n  if (isAxiosError<APIResponseError>(error) && error.response) {\n    let apiError = error.response.data;\n    return {\n      status: apiError.code,\n      message: apiError.message,\n      details: error.response,\n      name: error.name,\n      stack: error.stack,\n    };\n  }\n\n  return {\n    status: 500,\n    message: \"Oops something went wrong.\",\n    details: error.message,\n    name: error.name,\n    stack: error.stack,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}