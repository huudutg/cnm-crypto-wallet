{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/context/auth.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { AXIOS, doAxiosRequestIntercept } from \"src/services/api/config\";\nimport { logout } from \"src/services/api/identity\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    id: \"\",\n    avatar: \"\"\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  doAxiosRequestIntercept();\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\") || \"\";\n    const avatar = localStorage.getItem(\"avatar\") || \"\";\n    setUser({\n      id,\n      avatar\n    });\n    console.log(\"%c user.id\", \"color: blue;\", user.id);\n  }, []);\n\n  const login = async ({\n    code\n  }) => {\n    try {\n      const res = await AXIOS.post(\"/v1/rpc/auth/login\", {\n        code: code,\n        redirect_uri: \"/requests\"\n      }); // console.log(\"res\", res);, res);\n\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"avatar\", res.data.avatar);\n      localStorage.setItem(\"id\", res.data.name);\n      const user = res.data;\n      setUser({\n        id: user.name,\n        avatar: user.avatar\n      });\n      return user;\n    } catch (error) {\n      console.log(\"error2221\", error);\n      return error;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}; // export const ProtectRoute = ({ children }:any) => {\n//   const { isAuthenticated, loading } = useAuth();\n//   const router = useRouter();\n//   if (loading) {\n//     return (\n//       <div className=\"loading\">\n//         <CircularProgress style={{ width: \"10%\" }} color=\"secondary\" />\n//       </div>\n//     );\n//   }\n//   if (!isAuthenticated) return <Redirect to=\"/login\" />;\n//   //if (isAuthenticated) return <Redirect to={router.asPath} />;\n//   return children;\n// };\n\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"sources":["/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/context/auth.tsx"],"names":["React","createContext","useContext","useEffect","useState","AXIOS","doAxiosRequestIntercept","logout","AuthContext","AuthProvider","children","user","setUser","id","avatar","loading","setLoading","localStorage","getItem","console","log","login","code","res","post","redirect_uri","setItem","data","token","name","error","isAuthenticated","useAuth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AAEA,SAASC,KAAT,EAAgBC,uBAAhB,QAA+C,yBAA/C;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAGA,MAAMC,WAAgB,gBAAGP,aAAa,CAAC,EAAD,CAAtC;AAEA,OAAO,MAAMQ,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAC/D,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAM;AACpCS,IAAAA,EAAE,EAAE,EADgC;AAEpCC,IAAAA,MAAM,EAAE;AAF4B,GAAN,CAAhC;AAIA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACAE,EAAAA,uBAAuB;AAEvBH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,EAAE,GAAGI,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B,EAAzC;AACA,UAAMJ,MAAM,GAAGG,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EAAjD;AACAN,IAAAA,OAAO,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,cAA1B,EAA0CT,IAAI,CAACE,EAA/C;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMQ,KAAK,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAA4D;AACxE,QAAI;AACF,YAAMC,GAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,oBAAX,EAAiC;AACtDF,QAAAA,IAAI,EAAEA,IADgD;AAEtDG,QAAAA,YAAY,EAAE;AAFwC,OAAjC,CAAvB,CADE,CAKF;;AACAR,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACI,IAAJ,CAASC,KAAvC;AACAX,MAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BH,GAAG,CAACI,IAAJ,CAASb,MAAxC;AACAG,MAAAA,YAAY,CAACS,OAAb,CAAqB,IAArB,EAA2BH,GAAG,CAACI,IAAJ,CAASE,IAApC;AACA,YAAMlB,IAAI,GAAGY,GAAG,CAACI,IAAjB;AACAf,MAAAA,OAAO,CAAC;AAAEC,QAAAA,EAAE,EAAEF,IAAI,CAACkB,IAAX;AAAiBf,QAAAA,MAAM,EAAEH,IAAI,CAACG;AAA9B,OAAD,CAAP;AACA,aAAOH,IAAP;AACD,KAZD,CAYE,OAAOmB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBU,KAAzB;AACA,aAAOA,KAAP;AACD;AACF,GAjBD;;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,CAAC,CAACpB,IADd;AAELA,MAAAA,IAFK;AAGLU,MAAAA,KAHK;AAILd,MAAAA,MAJK;AAKLQ,MAAAA;AALK,KADT;AAAA,cASGL;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CM,C,CAiDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMsB,OAAY,GAAG,MAAM9B,UAAU,CAACM,WAAD,CAArC","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\nimport { AXIOS, doAxiosRequestIntercept } from \"src/services/api/config\";\nimport { logout } from \"src/services/api/identity\";\nimport { User } from \"src/services/api/users\";\n\nconst AuthContext: any = createContext({});\n\nexport const AuthProvider = ({ children }: { children: any }) => {\n  const [user, setUser] = useState<any>({\n    id: \"\",\n    avatar: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  doAxiosRequestIntercept();\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\") || \"\";\n    const avatar = localStorage.getItem(\"avatar\") || \"\";\n    setUser({ id, avatar });\n    console.log(\"%c user.id\", \"color: blue;\", user.id);\n  }, []);\n\n  const login = async ({ code }: { code: string; redirect_uri: string }) => {\n    try {\n      const res: any = await AXIOS.post(\"/v1/rpc/auth/login\", {\n        code: code,\n        redirect_uri: \"/requests\",\n      });\n      // console.log(\"res\", res);, res);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"avatar\", res.data.avatar);\n      localStorage.setItem(\"id\", res.data.name);\n      const user = res.data;\n      setUser({ id: user.name, avatar: user.avatar });\n      return user;\n    } catch (error) {\n      console.log(\"error2221\", error);\n      return error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        login,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// export const ProtectRoute = ({ children }:any) => {\n//   const { isAuthenticated, loading } = useAuth();\n//   const router = useRouter();\n//   if (loading) {\n//     return (\n//       <div className=\"loading\">\n//         <CircularProgress style={{ width: \"10%\" }} color=\"secondary\" />\n//       </div>\n//     );\n//   }\n//   if (!isAuthenticated) return <Redirect to=\"/login\" />;\n//   //if (isAuthenticated) return <Redirect to={router.asPath} />;\n//   return children;\n// };\n\nexport const useAuth: any = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}