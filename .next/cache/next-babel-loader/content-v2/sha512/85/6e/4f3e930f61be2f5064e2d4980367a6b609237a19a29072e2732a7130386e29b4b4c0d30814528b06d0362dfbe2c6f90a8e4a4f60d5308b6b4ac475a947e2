{"ast":null,"code":"import _defineProperty from \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/pages/repositories/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { Col, Table, Input, Button, Layout, Row, Card, PageHeader } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { LIMIT } from \"src/utils/consts\";\nimport NewRepositoryService from \"src/services/api/repositories\";\nvar repositorySvc = NewRepositoryService();\n\nvar filterDataSource = function filterDataSource(arr, query) {\n  return arr === null || arr === void 0 ? void 0 : arr.filter(function (el) {\n    return el.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 || el.created_at.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n  });\n};\n\nvar Repositories = function Repositories(props) {\n  _s();\n\n  var _useState = useState(),\n      dataSource = _useState[0],\n      setDataSource = _useState[1];\n\n  var _useState2 = useState(),\n      dataSourceFiltered = _useState2[0],\n      setDataSourceFiltered = _useState2[1];\n\n  var _useState3 = useState({\n    total: 0,\n    limit: LIMIT,\n    offset: 0\n  }),\n      metadata = _useState3[0],\n      setMetadata = _useState3[1];\n\n  var router = useRouter();\n  var columns = [{\n    title: \"Repository Name\",\n    key: \"name\",\n    sorter: function sorter(a, b) {\n      return a.name.localeCompare(b.name);\n    },\n    render: function render(record) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/repositories/details?id=\".concat(record.id),\n        children: record.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this);\n    }\n  }, {\n    title: \"Description\",\n    key: \"description\",\n    dataIndex: \"description\"\n  }, {\n    title: \"Created at\",\n    key: \"created_at\",\n    dataIndex: \"created_at\"\n  }];\n  useEffect(function () {\n    setDataSourceFiltered(dataSource);\n  }, [dataSource]);\n  useEffect(function () {\n    props.setActiveTab(\"repositories\");\n    repositorySvc.listRepositories({}).then(function (resp) {\n      console.log(\"resp listRepositories\", resp);\n      setDataSource(resp._items.map(function (el) {\n        var _el$created_at;\n\n        return _objectSpread(_objectSpread({}, el), {}, {\n          created_at: (_el$created_at = el.created_at) === null || _el$created_at === void 0 ? void 0 : _el$created_at.slice(0, 19).replace(\"T\", \" \"),\n          key: el.id\n        });\n      }));\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Repositories Board\",\n      className: \"layout-header\",\n      subTitle: \"Listing all the repositories on Gerrit\",\n      onBack: function onBack() {\n        return window.history.back();\n      },\n      breadcrumb: {\n        routes: [{\n          path: \"index\",\n          breadcrumbName: \"Repository\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layout.Content, {\n      className: \"layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"List of Repositories\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Input.Search, {\n              className: \"filter\",\n              placeholder: \"Find a repository\",\n              onChange: function onChange(e) {\n                setDataSourceFiltered(filterDataSource(dataSource, e.target.value));\n              },\n              enterButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/repositories/new\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: \"+ New Repository\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: dataSourceFiltered,\n          columns: columns,\n          loading: !dataSource,\n          scroll: {\n            x: 1000\n          },\n          pagination: {\n            total: dataSourceFiltered === null || dataSourceFiltered === void 0 ? void 0 : dataSourceFiltered.length,\n            onChange: function onChange(page, pageSize) {\n              setMetadata({\n                limit: pageSize || LIMIT,\n                offset: page\n              });\n            },\n            pageSize: metadata === null || metadata === void 0 ? void 0 : metadata.limit\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Repositories, \"+LZoWxdJ/n8QzF/cx7BEaZdMqNg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/Users/140457/Documents/Study/CNM/cnm-crypto-wallet/src/pages/repositories/index.tsx"],"names":["React","useEffect","useState","Link","Col","Table","Input","Button","Layout","Row","Card","PageHeader","useRouter","LIMIT","NewRepositoryService","repositorySvc","filterDataSource","arr","query","filter","el","name","toLowerCase","indexOf","created_at","Repositories","props","dataSource","setDataSource","dataSourceFiltered","setDataSourceFiltered","total","limit","offset","metadata","setMetadata","router","columns","title","key","sorter","a","b","localeCompare","render","record","id","dataIndex","setActiveTab","listRepositories","then","resp","console","log","_items","map","slice","replace","err","window","history","back","routes","path","breadcrumbName","e","target","value","x","length","onChange","page","pageSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport _ from \"lodash\";\nimport { Col, Table, Input, Button, Layout, Row, Card, PageHeader } from \"antd\";\nimport { useRouter } from \"next/router\";\n\nimport { Metadata } from \"src/utils/types\";\nimport { LIMIT } from \"src/utils/consts\";\nimport NewRepositoryService, {\n  Repository,\n} from \"src/services/api/repositories\";\n\nconst repositorySvc = NewRepositoryService();\n\nconst filterDataSource = (arr: Repository[] | undefined, query: string) => {\n  return arr?.filter((el: Repository) => {\n    return (\n      el.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n      el.created_at.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  });\n};\n\ninterface RepositoriesProps {\n  setActiveTab: Function;\n}\n\nconst Repositories = (props: RepositoriesProps) => {\n  const [dataSource, setDataSource] = useState<any>();\n  const [dataSourceFiltered, setDataSourceFiltered] = useState<Repository[]>();\n  const [metadata, setMetadata] = useState<Metadata>({\n    total: 0,\n    limit: LIMIT,\n    offset: 0,\n  });\n  const router = useRouter();\n\n  const columns = [\n    {\n      title: \"Repository Name\",\n      key: \"name\",\n      sorter: (a: Repository, b: Repository) => a.name.localeCompare(b.name),\n      render: (record: Repository) => (\n        <Link href={`/repositories/details?id=${record.id}`}>{record.id}</Link>\n      ),\n    },\n    {\n      title: \"Description\",\n      key: \"description\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Created at\",\n      key: \"created_at\",\n      dataIndex: \"created_at\",\n    },\n  ];\n  useEffect(() => {\n    setDataSourceFiltered(dataSource);\n  }, [dataSource]);\n\n  useEffect(() => {\n    props.setActiveTab(\"repositories\");\n\n    repositorySvc\n      .listRepositories({})\n      .then((resp) => {\n        console.log(\"resp listRepositories\", resp);\n\n        setDataSource(\n          resp._items.map((el) => ({\n            ...el,\n            created_at: el.created_at?.slice(0, 19).replace(\"T\", \" \"),\n            key: el.id,\n          }))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Layout>\n      <PageHeader\n        title=\"Repositories Board\"\n        className=\"layout-header\"\n        subTitle=\"Listing all the repositories on Gerrit\"\n        onBack={() => window.history.back()}\n        breadcrumb={{\n          routes: [\n            {\n              path: \"index\",\n              breadcrumbName: \"Repository\",\n            },\n          ],\n        }}\n      />\n      <Layout.Content className=\"layout-content\">\n        <Card title=\"List of Repositories\">\n          <Row justify=\"space-between\">\n            <Col span={12}>\n              <Input.Search\n                className=\"filter\"\n                placeholder=\"Find a repository\"\n                onChange={(e) => {\n                  setDataSourceFiltered(\n                    filterDataSource(dataSource, e.target.value)\n                  );\n                }}\n                enterButton\n              />\n            </Col>\n            <Col>\n              <Button type=\"primary\">\n                <Link href=\"/repositories/new\">\n                  <a>+ New Repository</a>\n                </Link>\n              </Button>\n            </Col>\n          </Row>\n          <br />\n          <Table\n            dataSource={dataSourceFiltered}\n            columns={columns}\n            loading={!dataSource}\n            scroll={{ x: 1000 }}\n            pagination={{\n              total: dataSourceFiltered?.length,\n              onChange: (page: number, pageSize?: number) => {\n                setMetadata({ limit: pageSize || LIMIT, offset: page });\n              },\n              pageSize: metadata?.limit,\n            }}\n          />\n        </Card>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default Repositories;\n"]},"metadata":{},"sourceType":"module"}